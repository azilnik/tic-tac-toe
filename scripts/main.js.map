{"version":3,"sources":["src/_scripts/node_modules/browser-pack/_prelude.js","src/_scripts/src/_scripts/main.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()","// Main javascript entry point\n// Should handle bootstrapping/starting application\n\n'use strict';\n\nlet turn = 0; // Variable to determine if it's Xs or Os turn\nlet gameState = new Array(9); // State of the game\nlet xTally = 0; // How many times the X team has won\nlet oTally = 0; // How many times the O team has won\nlet xIcon = `<i class=\"fas fa-times\"></i>`; // Icon for Xs\nlet oIcon = `<i class=\"fas fa-circle\"></i>`; // Icon for Os\nlet winMesage; // Message for winning state\n\n// Function to set up the game\nfunction setup(){\n\n  // Get the #grid element and find its children\n  let grid = document.getElementById(\"grid\");\n  let children = grid.children;\n\n  // Add an event listener to the game reset button\n  document.getElementById('reset').addEventListener(\"click\",function(){\n    resetGame();\n  });\n\n  // Add event listeners to each tile, to track moves/clicks\n  for (let i = 0; i < children.length; i++) {\n    let child = children[i];\n    child.setAttribute(\"id\", `${i}`);\n    child.addEventListener(\"click\",function(){\n      tileClick(i);\n    });\n  };\n\n  //Start the game!\n  startGame();\n};\n\n// Function to wipe the slate clean, so to speak\nfunction startGame(){\n\n  // Loop through all of the board positions.\n  for (let j = 0, max = gameState.length; j < max; j++){\n    //Reset the gameState array\n    gameState[j] = j;\n\n    //Kill the icons from the UI.\n    document.getElementById(j).innerHTML='';\n  };\n};\n\n//Function for whem a tile is clicked\nfunction tileClick(e){\n\n  // Get the tile from the grid\n  let tile = document.getElementById(`${e}`)\n\n  // Check if the tile is blank. If it is, take a turn.\n  tile.children.length == 0 ? takeTurn(`${e}`) :  console.log(`NOT blank!`);\n\n};\n\n//Function for when a turn is valid\nfunction takeTurn(f){\n  // Get the clicked tile\n  let tile = document.getElementById(`${f}`)\n\n  // Check who's turn it is.\n  if(turn==0){\n\n    // If it's X's turn, add an X to the tile\n    tile.innerHTML = `${xIcon} <!-- I'm an X -->`;\n    // Make it O's turn\n    gameState[f]=`x`;\n    turn = 1;\n\n  } else {\n    // If it's O's turn, add an O to the tile\n    tile.innerHTML = `${oIcon}<!-- I'm an O -->`;\n    gameState[f]=`o`;\n    // Make it X's turn\n    turn = 0;\n  };\n\n  // console.log(gameState);\n  // After a turn, check if a winning condition has been met.\n  checkWin();\n};\n\n// Function to check if there was a tie\nfunction checkTie(){\n\n  let checkNumber = 0; // Check to see if there are any remaining turns\n\n  // If there are any remaining values in the gameState that are not selected, increment the checkNumber\n  for (let i = 0, max = gameState.length; i < max; i++){\n    if(typeof gameState[i] == 'number'){\n      checkNumber++\n    };\n\n  };\n\n  // If no tiles are remaining to be selected, looks like it's a tie!\n  // Display that.\n  if (checkNumber == 0){\n      winMesage = `You tied! Nice work, smarty-pants.`;\n      showWinner();\n      checkNumber = 0;\n  };\n};\n\n// Function to check for winning condition\n// This probably needs to be refactored\nfunction checkWin(){\n\n  // ROWS\n\n  // Top Row\n  if(gameState[0] == gameState[1]){\n    if(gameState[1] == gameState[2]){\n      winAlert();\n    };\n  };\n\n  // Middle Row\n  if(gameState[3] == gameState[4]){\n    if(gameState[4] == gameState[5]){\n      winAlert();\n    };\n  };\n\n  // Bottom Row\n  if(gameState[6] == gameState[7]){\n    if(gameState[7] == gameState[8]){\n      winAlert();\n    };\n  };\n\n  // COLUMNS\n\n  // Left Column\n  if(gameState[0] == gameState[3]){\n    if(gameState[3] == gameState[6]){\n      winAlert();\n    };\n  };\n\n  // Middle Column\n  if(gameState[1] == gameState[4]){\n    if(gameState[4] == gameState[7]){\n      winAlert();\n    };\n  };\n\n  // Right Column\n  if(gameState[2] == gameState[5]){\n    if(gameState[5] == gameState[8]){\n      winAlert();\n    };\n  };\n\n  // DIAGONALS\n\n  // First Diagonal\n  if(gameState[0] == gameState[4]){\n    if(gameState[4] == gameState[8]){\n      winAlert();\n    };\n  };\n\n  // Second Diagonal\n  if(gameState[2] == gameState[4]){\n    if(gameState[4] == gameState[6]){\n      winAlert();\n    };\n  };\n\n  // Check if there was a tie\n  checkTie();\n\n};\n\n// Function to alert the players that a winner has been determined\nfunction winAlert(){\n  \n  // Determine who the winner is\n  let winner = '';\n  turn == 0 ? winner = `${oIcon}` : winner = `${xIcon}`;\n\n  // Set the win message to reflect who won the round\n  winMesage = `${winner} wins this round!`;\n\n  // Show the winning message\n  showWinner();\n\n  // Tally up the scores\n  tally();\n};\n\n\n// Function to display the winning/tie message\nfunction showWinner(){\n  document.getElementById('content').innerHTML = winMesage;\n  document.getElementById('win-notifer').style.display ='flex';\n  document.getElementById('block').style.visibility='visible';\n};\n\n// Function to tally the score of all the games.\nfunction tally(){\n\n  // Check who went last to determine the winner\n  turn == 0 ? oTally++ : xTally++;\n\n  // Update the scoreboard to reflect number of wins.\n  let scoreboard = document.getElementById('winners');\n  let currentScore = `${xIcon} has won ${xTally} times. ${oIcon} has won ${oTally} times.`;\n  scoreboard.innerHTML = currentScore;\n};\n\n// Function to reset the game back to default state\nfunction resetGame(){\n\n  document.getElementById('win-notifer').style.display ='none'; // Hide the winner notifier\n  document.getElementById('block').style.visibility='hidden'; // Hide the cover\n  turn = 0; //Reset turn back to X\n  startGame(); // Start over\n};\n\n// When the page loads, run the setup.\nsetup();\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvX3NjcmlwdHMvbWFpbi5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQ0FBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsImZpbGUiOiJnZW5lcmF0ZWQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9cmV0dXJuIGV9KSgpIiwiLy8gTWFpbiBqYXZhc2NyaXB0IGVudHJ5IHBvaW50XG4vLyBTaG91bGQgaGFuZGxlIGJvb3RzdHJhcHBpbmcvc3RhcnRpbmcgYXBwbGljYXRpb25cblxuJ3VzZSBzdHJpY3QnO1xuXG5sZXQgdHVybiA9IDA7IC8vIFZhcmlhYmxlIHRvIGRldGVybWluZSBpZiBpdCdzIFhzIG9yIE9zIHR1cm5cbmxldCBnYW1lU3RhdGUgPSBuZXcgQXJyYXkoOSk7IC8vIFN0YXRlIG9mIHRoZSBnYW1lXG5sZXQgeFRhbGx5ID0gMDsgLy8gSG93IG1hbnkgdGltZXMgdGhlIFggdGVhbSBoYXMgd29uXG5sZXQgb1RhbGx5ID0gMDsgLy8gSG93IG1hbnkgdGltZXMgdGhlIE8gdGVhbSBoYXMgd29uXG5sZXQgeEljb24gPSBgPGkgY2xhc3M9XCJmYXMgZmEtdGltZXNcIj48L2k+YDsgLy8gSWNvbiBmb3IgWHNcbmxldCBvSWNvbiA9IGA8aSBjbGFzcz1cImZhcyBmYS1jaXJjbGVcIj48L2k+YDsgLy8gSWNvbiBmb3IgT3NcbmxldCB3aW5NZXNhZ2U7IC8vIE1lc3NhZ2UgZm9yIHdpbm5pbmcgc3RhdGVcblxuLy8gRnVuY3Rpb24gdG8gc2V0IHVwIHRoZSBnYW1lXG5mdW5jdGlvbiBzZXR1cCgpe1xuXG4gIC8vIEdldCB0aGUgI2dyaWQgZWxlbWVudCBhbmQgZmluZCBpdHMgY2hpbGRyZW5cbiAgbGV0IGdyaWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImdyaWRcIik7XG4gIGxldCBjaGlsZHJlbiA9IGdyaWQuY2hpbGRyZW47XG5cbiAgLy8gQWRkIGFuIGV2ZW50IGxpc3RlbmVyIHRvIHRoZSBnYW1lIHJlc2V0IGJ1dHRvblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVzZXQnKS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIixmdW5jdGlvbigpe1xuICAgIHJlc2V0R2FtZSgpO1xuICB9KTtcblxuICAvLyBBZGQgZXZlbnQgbGlzdGVuZXJzIHRvIGVhY2ggdGlsZSwgdG8gdHJhY2sgbW92ZXMvY2xpY2tzXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW4ubGVuZ3RoOyBpKyspIHtcbiAgICBsZXQgY2hpbGQgPSBjaGlsZHJlbltpXTtcbiAgICBjaGlsZC5zZXRBdHRyaWJ1dGUoXCJpZFwiLCBgJHtpfWApO1xuICAgIGNoaWxkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLGZ1bmN0aW9uKCl7XG4gICAgICB0aWxlQ2xpY2soaSk7XG4gICAgfSk7XG4gIH07XG5cbiAgLy9TdGFydCB0aGUgZ2FtZSFcbiAgc3RhcnRHYW1lKCk7XG59O1xuXG4vLyBGdW5jdGlvbiB0byB3aXBlIHRoZSBzbGF0ZSBjbGVhbiwgc28gdG8gc3BlYWtcbmZ1bmN0aW9uIHN0YXJ0R2FtZSgpe1xuXG4gIC8vIExvb3AgdGhyb3VnaCBhbGwgb2YgdGhlIGJvYXJkIHBvc2l0aW9ucy5cbiAgZm9yIChsZXQgaiA9IDAsIG1heCA9IGdhbWVTdGF0ZS5sZW5ndGg7IGogPCBtYXg7IGorKyl7XG4gICAgLy9SZXNldCB0aGUgZ2FtZVN0YXRlIGFycmF5XG4gICAgZ2FtZVN0YXRlW2pdID0gajtcblxuICAgIC8vS2lsbCB0aGUgaWNvbnMgZnJvbSB0aGUgVUkuXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaikuaW5uZXJIVE1MPScnO1xuICB9O1xufTtcblxuLy9GdW5jdGlvbiBmb3Igd2hlbSBhIHRpbGUgaXMgY2xpY2tlZFxuZnVuY3Rpb24gdGlsZUNsaWNrKGUpe1xuXG4gIC8vIEdldCB0aGUgdGlsZSBmcm9tIHRoZSBncmlkXG4gIGxldCB0aWxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7ZX1gKVxuXG4gIC8vIENoZWNrIGlmIHRoZSB0aWxlIGlzIGJsYW5rLiBJZiBpdCBpcywgdGFrZSBhIHR1cm4uXG4gIHRpbGUuY2hpbGRyZW4ubGVuZ3RoID09IDAgPyB0YWtlVHVybihgJHtlfWApIDogIGNvbnNvbGUubG9nKGBOT1QgYmxhbmshYCk7XG5cbn07XG5cbi8vRnVuY3Rpb24gZm9yIHdoZW4gYSB0dXJuIGlzIHZhbGlkXG5mdW5jdGlvbiB0YWtlVHVybihmKXtcbiAgLy8gR2V0IHRoZSBjbGlja2VkIHRpbGVcbiAgbGV0IHRpbGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtmfWApXG5cbiAgLy8gQ2hlY2sgd2hvJ3MgdHVybiBpdCBpcy5cbiAgaWYodHVybj09MCl7XG5cbiAgICAvLyBJZiBpdCdzIFgncyB0dXJuLCBhZGQgYW4gWCB0byB0aGUgdGlsZVxuICAgIHRpbGUuaW5uZXJIVE1MID0gYCR7eEljb259IDwhLS0gSSdtIGFuIFggLS0+YDtcbiAgICAvLyBNYWtlIGl0IE8ncyB0dXJuXG4gICAgZ2FtZVN0YXRlW2ZdPWB4YDtcbiAgICB0dXJuID0gMTtcblxuICB9IGVsc2Uge1xuICAgIC8vIElmIGl0J3MgTydzIHR1cm4sIGFkZCBhbiBPIHRvIHRoZSB0aWxlXG4gICAgdGlsZS5pbm5lckhUTUwgPSBgJHtvSWNvbn08IS0tIEknbSBhbiBPIC0tPmA7XG4gICAgZ2FtZVN0YXRlW2ZdPWBvYDtcbiAgICAvLyBNYWtlIGl0IFgncyB0dXJuXG4gICAgdHVybiA9IDA7XG4gIH07XG5cbiAgLy8gY29uc29sZS5sb2coZ2FtZVN0YXRlKTtcbiAgLy8gQWZ0ZXIgYSB0dXJuLCBjaGVjayBpZiBhIHdpbm5pbmcgY29uZGl0aW9uIGhhcyBiZWVuIG1ldC5cbiAgY2hlY2tXaW4oKTtcbn07XG5cbi8vIEZ1bmN0aW9uIHRvIGNoZWNrIGlmIHRoZXJlIHdhcyBhIHRpZVxuZnVuY3Rpb24gY2hlY2tUaWUoKXtcblxuICBsZXQgY2hlY2tOdW1iZXIgPSAwOyAvLyBDaGVjayB0byBzZWUgaWYgdGhlcmUgYXJlIGFueSByZW1haW5pbmcgdHVybnNcblxuICAvLyBJZiB0aGVyZSBhcmUgYW55IHJlbWFpbmluZyB2YWx1ZXMgaW4gdGhlIGdhbWVTdGF0ZSB0aGF0IGFyZSBub3Qgc2VsZWN0ZWQsIGluY3JlbWVudCB0aGUgY2hlY2tOdW1iZXJcbiAgZm9yIChsZXQgaSA9IDAsIG1heCA9IGdhbWVTdGF0ZS5sZW5ndGg7IGkgPCBtYXg7IGkrKyl7XG4gICAgaWYodHlwZW9mIGdhbWVTdGF0ZVtpXSA9PSAnbnVtYmVyJyl7XG4gICAgICBjaGVja051bWJlcisrXG4gICAgfTtcblxuICB9O1xuXG4gIC8vIElmIG5vIHRpbGVzIGFyZSByZW1haW5pbmcgdG8gYmUgc2VsZWN0ZWQsIGxvb2tzIGxpa2UgaXQncyBhIHRpZSFcbiAgLy8gRGlzcGxheSB0aGF0LlxuICBpZiAoY2hlY2tOdW1iZXIgPT0gMCl7XG4gICAgICB3aW5NZXNhZ2UgPSBgWW91IHRpZWQhIE5pY2Ugd29yaywgc21hcnR5LXBhbnRzLmA7XG4gICAgICBzaG93V2lubmVyKCk7XG4gICAgICBjaGVja051bWJlciA9IDA7XG4gIH07XG59O1xuXG4vLyBGdW5jdGlvbiB0byBjaGVjayBmb3Igd2lubmluZyBjb25kaXRpb25cbi8vIFRoaXMgcHJvYmFibHkgbmVlZHMgdG8gYmUgcmVmYWN0b3JlZFxuZnVuY3Rpb24gY2hlY2tXaW4oKXtcblxuICAvLyBST1dTXG5cbiAgLy8gVG9wIFJvd1xuICBpZihnYW1lU3RhdGVbMF0gPT0gZ2FtZVN0YXRlWzFdKXtcbiAgICBpZihnYW1lU3RhdGVbMV0gPT0gZ2FtZVN0YXRlWzJdKXtcbiAgICAgIHdpbkFsZXJ0KCk7XG4gICAgfTtcbiAgfTtcblxuICAvLyBNaWRkbGUgUm93XG4gIGlmKGdhbWVTdGF0ZVszXSA9PSBnYW1lU3RhdGVbNF0pe1xuICAgIGlmKGdhbWVTdGF0ZVs0XSA9PSBnYW1lU3RhdGVbNV0pe1xuICAgICAgd2luQWxlcnQoKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIEJvdHRvbSBSb3dcbiAgaWYoZ2FtZVN0YXRlWzZdID09IGdhbWVTdGF0ZVs3XSl7XG4gICAgaWYoZ2FtZVN0YXRlWzddID09IGdhbWVTdGF0ZVs4XSl7XG4gICAgICB3aW5BbGVydCgpO1xuICAgIH07XG4gIH07XG5cbiAgLy8gQ09MVU1OU1xuXG4gIC8vIExlZnQgQ29sdW1uXG4gIGlmKGdhbWVTdGF0ZVswXSA9PSBnYW1lU3RhdGVbM10pe1xuICAgIGlmKGdhbWVTdGF0ZVszXSA9PSBnYW1lU3RhdGVbNl0pe1xuICAgICAgd2luQWxlcnQoKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIE1pZGRsZSBDb2x1bW5cbiAgaWYoZ2FtZVN0YXRlWzFdID09IGdhbWVTdGF0ZVs0XSl7XG4gICAgaWYoZ2FtZVN0YXRlWzRdID09IGdhbWVTdGF0ZVs3XSl7XG4gICAgICB3aW5BbGVydCgpO1xuICAgIH07XG4gIH07XG5cbiAgLy8gUmlnaHQgQ29sdW1uXG4gIGlmKGdhbWVTdGF0ZVsyXSA9PSBnYW1lU3RhdGVbNV0pe1xuICAgIGlmKGdhbWVTdGF0ZVs1XSA9PSBnYW1lU3RhdGVbOF0pe1xuICAgICAgd2luQWxlcnQoKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIERJQUdPTkFMU1xuXG4gIC8vIEZpcnN0IERpYWdvbmFsXG4gIGlmKGdhbWVTdGF0ZVswXSA9PSBnYW1lU3RhdGVbNF0pe1xuICAgIGlmKGdhbWVTdGF0ZVs0XSA9PSBnYW1lU3RhdGVbOF0pe1xuICAgICAgd2luQWxlcnQoKTtcbiAgICB9O1xuICB9O1xuXG4gIC8vIFNlY29uZCBEaWFnb25hbFxuICBpZihnYW1lU3RhdGVbMl0gPT0gZ2FtZVN0YXRlWzRdKXtcbiAgICBpZihnYW1lU3RhdGVbNF0gPT0gZ2FtZVN0YXRlWzZdKXtcbiAgICAgIHdpbkFsZXJ0KCk7XG4gICAgfTtcbiAgfTtcblxuICAvLyBDaGVjayBpZiB0aGVyZSB3YXMgYSB0aWVcbiAgY2hlY2tUaWUoKTtcblxufTtcblxuLy8gRnVuY3Rpb24gdG8gYWxlcnQgdGhlIHBsYXllcnMgdGhhdCBhIHdpbm5lciBoYXMgYmVlbiBkZXRlcm1pbmVkXG5mdW5jdGlvbiB3aW5BbGVydCgpe1xuICBcbiAgLy8gRGV0ZXJtaW5lIHdobyB0aGUgd2lubmVyIGlzXG4gIGxldCB3aW5uZXIgPSAnJztcbiAgdHVybiA9PSAwID8gd2lubmVyID0gYCR7b0ljb259YCA6IHdpbm5lciA9IGAke3hJY29ufWA7XG5cbiAgLy8gU2V0IHRoZSB3aW4gbWVzc2FnZSB0byByZWZsZWN0IHdobyB3b24gdGhlIHJvdW5kXG4gIHdpbk1lc2FnZSA9IGAke3dpbm5lcn0gd2lucyB0aGlzIHJvdW5kIWA7XG5cbiAgLy8gU2hvdyB0aGUgd2lubmluZyBtZXNzYWdlXG4gIHNob3dXaW5uZXIoKTtcblxuICAvLyBUYWxseSB1cCB0aGUgc2NvcmVzXG4gIHRhbGx5KCk7XG59O1xuXG5cbi8vIEZ1bmN0aW9uIHRvIGRpc3BsYXkgdGhlIHdpbm5pbmcvdGllIG1lc3NhZ2VcbmZ1bmN0aW9uIHNob3dXaW5uZXIoKXtcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NvbnRlbnQnKS5pbm5lckhUTUwgPSB3aW5NZXNhZ2U7XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3aW4tbm90aWZlcicpLnN0eWxlLmRpc3BsYXkgPSdmbGV4JztcbiAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2Jsb2NrJykuc3R5bGUudmlzaWJpbGl0eT0ndmlzaWJsZSc7XG59O1xuXG4vLyBGdW5jdGlvbiB0byB0YWxseSB0aGUgc2NvcmUgb2YgYWxsIHRoZSBnYW1lcy5cbmZ1bmN0aW9uIHRhbGx5KCl7XG5cbiAgLy8gQ2hlY2sgd2hvIHdlbnQgbGFzdCB0byBkZXRlcm1pbmUgdGhlIHdpbm5lclxuICB0dXJuID09IDAgPyBvVGFsbHkrKyA6IHhUYWxseSsrO1xuXG4gIC8vIFVwZGF0ZSB0aGUgc2NvcmVib2FyZCB0byByZWZsZWN0IG51bWJlciBvZiB3aW5zLlxuICBsZXQgc2NvcmVib2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd3aW5uZXJzJyk7XG4gIGxldCBjdXJyZW50U2NvcmUgPSBgJHt4SWNvbn0gaGFzIHdvbiAke3hUYWxseX0gdGltZXMuICR7b0ljb259IGhhcyB3b24gJHtvVGFsbHl9IHRpbWVzLmA7XG4gIHNjb3JlYm9hcmQuaW5uZXJIVE1MID0gY3VycmVudFNjb3JlO1xufTtcblxuLy8gRnVuY3Rpb24gdG8gcmVzZXQgdGhlIGdhbWUgYmFjayB0byBkZWZhdWx0IHN0YXRlXG5mdW5jdGlvbiByZXNldEdhbWUoKXtcblxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd2luLW5vdGlmZXInKS5zdHlsZS5kaXNwbGF5ID0nbm9uZSc7IC8vIEhpZGUgdGhlIHdpbm5lciBub3RpZmllclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYmxvY2snKS5zdHlsZS52aXNpYmlsaXR5PSdoaWRkZW4nOyAvLyBIaWRlIHRoZSBjb3ZlclxuICB0dXJuID0gMDsgLy9SZXNldCB0dXJuIGJhY2sgdG8gWFxuICBzdGFydEdhbWUoKTsgLy8gU3RhcnQgb3ZlclxufTtcblxuLy8gV2hlbiB0aGUgcGFnZSBsb2FkcywgcnVuIHRoZSBzZXR1cC5cbnNldHVwKCk7XG4iXX0="}